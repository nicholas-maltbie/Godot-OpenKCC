name: üåê Web Build
on:
  workflow_call:
    inputs:
      uploadArtifact:
        description: 'Should site artifact be uploaded'
        required: false
        default: false
        type: boolean

jobs:
  build-docs:
    name: üåê Build GDScript Documentation
    runs-on: ubuntu-latest
    container:
      image: barichello/godot-ci:4.3
    steps:
      - uses: actions/checkout@v4
      - run: git config --global --add safe.directory $GITHUB_WORKSPACE
      - uses: ./.github/actions/setvars
      - uses: nschloe/action-cached-lfs-checkout@v1
      
      - name: Load Project Once
        run: godot -v -e --headless --path ${{env.PROJECT_PATH}} --quit-after 100 || true

      - run: mkdir -p ${{env.PROJECT_PATH}}/doc/godot
      - run: godot --path ${{env.PROJECT_PATH}} --doctool doc/godot --quit
      - run: godot --path ${{env.PROJECT_PATH}} --doctool doc/classes --gdscript-docs res://scripts --quit

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: gdscript_data
          path: ${{env.PROJECT_PATH}}/doc
          retention-days: 1

  build-doc-website:
    name: üåê Build Doc Website
    runs-on: ubuntu-latest
    needs: build-docs
    steps:
      - uses: actions/checkout@v4
      - run: git config --global --add safe.directory $GITHUB_WORKSPACE
      - uses: ./.github/actions/setvars
      - uses: nschloe/action-cached-lfs-checkout@v1

      - name: Download GDScript Documentation
        uses: actions/download-artifact@v4
        with:
          name: gdscript_data
          path: ${{env.PROJECT_PATH}}/doc

      - uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.x'

      - uses: actions/setup-python@v5
        with:
          python-version: '3.13'
  
      - name: Install Tools
        run: |
          export DOTNET_SYSTEM_GLOBALIZATION_INVARIANT=1
          dotnet tool restore
          python3 -m pip install gddoc2yml

      - name: Convert Docs to YML
        run: gdxml2yml --filter ${{env.PROJECT_PATH}}/doc/classes ${{env.PROJECT_PATH}}/doc/classes ${{env.PROJECT_PATH}}/doc/godot doc/api

      - name: Build site with DocFx
        run: |
          export DOTNET_SYSTEM_GLOBALIZATION_INVARIANT=1
          dotnet tool run docfx doc/docfx.json

      - name: Add baseUrl to xrefmap
        run: |
          sed -i '2 i baseUrl: https://openkcc.nickmaltbie.com/docs/' doc/_site/xrefmap.yml

      - name: üì¶ Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: docs
          path: doc/_site/
          retention-days: 1

  build-game:
    name: üåê Build Godot Project
    runs-on: ubuntu-20.04
    container:
      image: barichello/godot-ci:4.3
    steps:
      - uses: actions/checkout@v4
      - run: git config --global --add safe.directory $GITHUB_WORKSPACE
      - uses: ./.github/actions/setvars
      - uses: nschloe/action-cached-lfs-checkout@v1

      - name: Download Binaries
        uses: actions/download-artifact@v4
        with:
          path: extracted_files
          name: gdextension_libs

      - name: Replace with new files
        run: |
          ls -R extracted_files
          mv -f extracted_files ${{env.ADDON_LIBS_PATH}}

      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable

      - name: üï∏ Web Build
        run: |
          godot -v -e --headless --path ${{env.PROJECT_PATH}} --quit-after 100 || true
          mkdir ${GITHUB_WORKSPACE}/_site
          godot -v --headless --path ${{env.PROJECT_PATH}} --export-release web ${GITHUB_WORKSPACE}/_site/index.html
          cp ${{env.PROJECT_PATH}}/coi-serviceworker.min.js ${GITHUB_WORKSPACE}/_site/coi-serviceworker.min.js

      - name: üì¶ Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: game
          path: _site/
          retention-days: 1

  upload-artifact:
    name: üì¶ Upload Site Artifact
    needs: [build-doc-website, build-game]
    runs-on: ubuntu-20.04
    steps:
      - name: Download Game
        uses: actions/download-artifact@v4
        with:
          name: game
          path: _site/

      - name: Download Docs
        uses: actions/download-artifact@v4
        with:
          name: docs
          path: _site/docs

      - name: Fix Permissions
        run: |
          chmod -c -R +rX "_site/" | while read line; do
            echo "::warning title=Invalid file permissions automatically fixed::$line"
          done

      - name: Upload Artifact
        if: ${{ inputs.uploadArtifact }}
        uses: actions/upload-pages-artifact@v3
        with:
          name: github-pages