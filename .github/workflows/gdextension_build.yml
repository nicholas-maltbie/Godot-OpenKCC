name: 🛠️ GDExtension Build
on:
  workflow_call:
    inputs:
      buildWindows:
        description: 'Build extensions for windows'
        required: false
        default: false
        type: boolean
      buildLinux:
        description: 'Build extensions for linux'
        required: false
        default: false
        type: boolean
      buildMacos:
        description: 'Build extensions for macos'
        required: false
        default: false
        type: boolean
      buildAndroid:
        description: 'Build extensions for android'
        required: false
        default: false
        type: boolean
      buildWeb:
        description: 'Build extensions for web'
        required: false
        default: false
        type: boolean
  workflow_dispatch:

# Stop the same workflow actions
concurrency:
  group: ${{github.workflow}}-${{github.event.pull_request.number || github.run_id}}
  cancel-in-progress: true

env:
  SCONS_CACHE: ${{github.workspace}}/.scons-cache/

jobs:
  windows-gdextension:
    name: 🏁 Windows
    runs-on: "windows-latest"
    if: ${{ inputs.buildWindows || github.event_name == 'workflow_dispatch' }}

    strategy:
      fail-fast: false
      matrix:
        arch: [x86_64]
        target: [editor, template_debug, template_release]

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - uses: ./.github/actions/setvars
      - uses: nschloe/action-cached-lfs-checkout@v1

      - name: Compile GDExtension
        uses: ./.github/actions/compile_gdextension
        with:
          platform: windows
          target: ${{matrix.target}}
          arch: ${{matrix.arch}}
          artifact: windows

  # ============================================

  linux-gdextension:
    name: 🐧 Linux
    runs-on: "ubuntu-20.04"
    if: ${{ inputs.buildLinux || github.event_name == 'workflow_dispatch' }}

    strategy:
      fail-fast: false
      matrix:
        arch: [x86_64]
        target: [editor, template_debug, template_release]

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - uses: ./.github/actions/setvars
      - uses: nschloe/action-cached-lfs-checkout@v1

      - name: Compile GDExtension
        uses: ./.github/actions/compile_gdextension
        with:
          platform: linux
          target: ${{matrix.target}}
          arch: ${{matrix.arch}}
          artifact: linux

  # ============================================

  macos-gdextension:
    name: 🍏 MacOS
    runs-on: "macos-latest"
    if: ${{ inputs.buildMacos || github.event_name == 'workflow_dispatch' }}

    strategy:
      fail-fast: false
      matrix:
        arch: [universal]
        target: [editor, template_debug, template_release]

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - uses: ./.github/actions/setvars
      - uses: nschloe/action-cached-lfs-checkout@v1

      - name: Compile GDExtension
        uses: ./.github/actions/compile_gdextension
        with:
          platform: macos
          target: ${{matrix.target}}
          arch: ${{matrix.arch}}
          artifact: macos
          additional: macos_deployment_target=10.14

  # ============================================

  android-gdextension:
    name: 🤖 Android
    runs-on: "ubuntu-latest"
    if: ${{ inputs.buildAndroid || github.event_name == 'workflow_dispatch' }}

    strategy:
      fail-fast: false
      matrix:
        arch: [arm32, arm64, x86_32, x86_64]
        target: [template_release]

    env:
      ANDROID_NDK_ROOT: /usr/local/lib/android/sdk/ndk/23.2.8568313

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - uses: ./.github/actions/setvars
      - uses: nschloe/action-cached-lfs-checkout@v1

      - name: Compile GDExtension
        uses: ./.github/actions/compile_gdextension
        with:
          platform: android
          target: ${{matrix.target}}
          arch: ${{matrix.arch}}
          artifact: android

  # ============================================

  web-gdextension:
    name: 🕸 Web
    runs-on: "ubuntu-latest"
    if: ${{ inputs.buildWeb || github.event_name == 'workflow_dispatch' }}

    strategy:
      fail-fast: false
      matrix:
        arch: [wasm32]
        target: [template_release]      

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - uses: ./.github/actions/setvars
      - uses: nschloe/action-cached-lfs-checkout@v1

      - uses: mymindstorm/setup-emsdk@v11
        with:
          version: ${{env.EM_VERSION}}

      # - shell: bash
      #   run: |
      #     cd godot-cpp
      #     git apply --ignore-space-change --ignore-whitespace ../patches/fixed_javascript_build.patch
      #     cd ..

      - name: Compile GDExtension
        uses: ./.github/actions/compile_gdextension
        with:
          platform: javascript
          target: ${{matrix.target}}
          arch: ${{matrix.arch}}
          artifact: javascript

  # ============================================

  collect-gdextension:
    needs:
      [
        windows-gdextension,
        linux-gdextension,
        macos-gdextension,
        android-gdextension,
        web-gdextension,
      ]
    if: |
      always() &&
      (needs.windows-gdextension.result == 'success' || needs.windows-gdextension.result == 'skipped') &&
      (needs.linux-gdextension.result == 'success' || needs.linux-gdextension.result == 'skipped') &&
      (needs.macos-gdextension.result == 'success' || needs.macos-gdextension.result == 'skipped') &&
      (needs.android-gdextension.result == 'success' || needs.android-gdextension.result == 'skipped') &&
      (needs.web-gdextension.result == 'success' || needs.web-gdextension.result == 'skipped') &&
      !(needs.windows-gdextension.result == 'skipped' &&
        needs.linux-gdextension.result == 'skipped' &&
        needs.macos-gdextension.result == 'skipped' &&
        needs.android-gdextension.result == 'skipped' &&
        needs.web-gdextension.result == 'skipped')
    name: 📦 Collect GDExtension binaries
    runs-on: ubuntu-latest

    steps:
      - name: Download Binaries
        uses: actions/download-artifact@v3
        with:
          path: extracted_files

      - name: Store all libraries in one directory
        run: |
          ls -R extracted_files/
          declare -a platforms=("windows" "linux" "macos" "android" "javascript")
          for platform in "${platforms[@]}"
          do
            if [ -n "$(ls -A extracted_files/$platform 2>/dev/null)" ]; then
              echo "Extract files for $platform"
              mv -f extracted_files/$platform/* extracted_files
              rm -r extracted_files/$platform
            else
              echo "No files found for $platform"
            fi
          done
          touch extracted_files/.gdignore

      - name: Upload GDExtension
        uses: actions/upload-artifact@v3
        with:
          name: gdextension_libs
          retention-days: 7
          path: extracted_files/*
