name: üõ†Ô∏è GDExtension Build
on:
  workflow_call:
    inputs:
      buildWindows:
        description: 'Build extensions for windows'
        required: false
        default: false
        type: boolean
      buildLinux:
        description: 'Build extensions for linux'
        required: false
        default: false
        type: boolean
      buildMacos:
        description: 'Build extensions for macos'
        required: false
        default: false
        type: boolean
      buildAndroid:
        description: 'Build extensions for android'
        required: false
        default: false
        type: boolean
      buildWeb:
        description: 'Build extensions for web'
        required: false
        default: false
        type: boolean
  workflow_dispatch:

# Stop the same workflow actions
concurrency:
  group: ${{github.workflow}}-${{github.event.pull_request.number || github.run_id}}
  cancel-in-progress: true

env:
  SCONS_CACHE: ${{github.workspace}}/.scons-cache/

jobs:
  windows-gdextension:
    name: üèÅ Windows
    runs-on: "windows-latest"
    if: ${{ inputs.buildWindows || github.event_name == 'workflow_dispatch' }}

    strategy:
      fail-fast: false
      matrix:
        arch: [x86_64]
        target: [editor, template_debug, template_release]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - uses: ./.github/actions/setvars
      - uses: nschloe/action-cached-lfs-checkout@v1

      - name: Compile GDExtension
        uses: ./.github/actions/compile_gdextension
        with:
          platform: windows
          target: ${{matrix.target}}
          arch: ${{matrix.arch}}
          artifact: openkcc-windows_${{matrix.target}}_${{matrix.arch}}

  # ============================================

  linux-gdextension:
    name: üêß Linux
    runs-on: ubuntu-latest
    if: ${{ inputs.buildLinux || github.event_name == 'workflow_dispatch' }}

    strategy:
      fail-fast: false
      matrix:
        arch: [x86_64]
        target: [editor, template_debug, template_release]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - uses: ./.github/actions/setvars
      - uses: nschloe/action-cached-lfs-checkout@v1

      - name: Compile GDExtension
        uses: ./.github/actions/compile_gdextension
        with:
          platform: linux
          target: ${{matrix.target}}
          arch: ${{matrix.arch}}
          artifact: openkcc-linux_${{matrix.target}}_${{matrix.arch}}

  # ============================================

  macos-gdextension:
    name: üçè MacOS
    runs-on: "macos-latest"
    if: ${{ inputs.buildMacos || github.event_name == 'workflow_dispatch' }}

    strategy:
      fail-fast: false
      matrix:
        arch: [universal]
        target: [editor, template_debug, template_release]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - uses: ./.github/actions/setvars
      - uses: nschloe/action-cached-lfs-checkout@v1

      - name: Compile GDExtension
        uses: ./.github/actions/compile_gdextension
        with:
          platform: macos
          target: ${{matrix.target}}
          arch: ${{matrix.arch}}
          artifact: openkcc-macos_${{matrix.target}}_${{matrix.arch}}
          additional: macos_deployment_target=10.14

  # ============================================

  android-gdextension:
    name: ü§ñ Android
    runs-on: ubuntu-latest
    if: ${{ inputs.buildAndroid || github.event_name == 'workflow_dispatch' }}

    strategy:
      fail-fast: false
      matrix:
        arch: [arm32, arm64, x86_32, x86_64]
        target: [template_debug, template_release]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - uses: ./.github/actions/setvars
      - uses: nschloe/action-cached-lfs-checkout@v1

      - name: Install Android NDK r23c
        uses: nttld/setup-ndk@v1.4.1
        id: setup-ndk
        with:
          ndk-version: r23c
          link-to-sdk: true
          local-cache: true

      # TODO revisit after some updates of nttld/setup-ndk
      - name: Restore Android Symlinks
        run: |
          directory="${{ steps.setup-ndk.outputs.ndk-path }}/toolchains/llvm/prebuilt/linux-x86_64/bin"

          find "$directory" -type l | while read link; do
              current_target=$(readlink "$link")
              new_target="$directory/$(basename "$current_target")"
              ln -sf "$new_target" "$link"
              echo "Changed $(basename "$link") from $current_target to $new_target"
          done

      - name: Compile GDExtension
        uses: ./.github/actions/compile_gdextension
        with:
          platform: android
          target: ${{matrix.target}}
          arch: ${{matrix.arch}}
          artifact: openkcc-android_${{matrix.target}}_${{matrix.arch}}

  web-gdextension:
    name: üï∏ Web
    runs-on: ubuntu-latest
    if: ${{ inputs.buildWeb || github.event_name == 'workflow_dispatch' }}

    strategy:
      fail-fast: false
      matrix:
        arch: [wasm32]
        target: [template_debug, template_release]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - uses: ./.github/actions/setvars
      - uses: nschloe/action-cached-lfs-checkout@v1

      - uses: mymindstorm/setup-emsdk@v11
        with:
          version: ${{env.EM_VERSION}}

      - name: Compile GDExtension
        uses: ./.github/actions/compile_gdextension
        with:
          platform: web
          target: ${{matrix.target}}
          arch: ${{matrix.arch}}
          artifact: openkcc-web_${{matrix.target}}_${{matrix.arch}}

  # ============================================

  collect-gdextension:
    needs:
      [
        windows-gdextension,
        linux-gdextension,
        macos-gdextension,
        android-gdextension,
        web-gdextension,
      ]
    if: |
      always() &&
      !contains(needs.*.result, 'failure') &&
      !contains(needs.*.result, 'cancelled')
    name: üì¶ Collect GDExtension binaries
    runs-on: ubuntu-latest

    steps:
      - name: Download Binaries
        uses: actions/download-artifact@v4
        with:
          pattern: openkcc-*
          path: extracted_files

      - name: Store all libraries in one directory
        run: |
          arch_dirs=$(find extracted_files/ -mindepth 1 -maxdepth 1 -type d)
          echo "Original structure:"
          find extracted_files -mindepth 1
          mv -f extracted_files/**/* extracted_files
          rm -rf $arch_dirs
          echo "Final structure:"
          find extracted_files -mindepth 1
          touch extracted_files/.gdignore

      - name: Upload GDExtension
        uses: actions/upload-artifact@v4
        with:
          name: gdextension_libs
          retention-days: 7
          path: extracted_files/*
