name: üöÄ Deploy Github Pages Demo
on:
  push:
    branch:
      - main
  workflow_dispatch:
  repository_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Stop the same workflow actions
concurrency:
  group: ${{github.workflow}}
  cancel-in-progress: true

# Environment variables for the job
env:
  SCONS_CACHE: ${{github.workspace}}/.scons-cache/
  ADDON_LIBS_PATH: openkcc/addons/openkcc/libs
  GODOT_VERSION: 4.1.1
  PROJECT_PATH: openkcc
  EM_VERSION: 3.1.46

jobs:
  compile:
    name: üõ†Ô∏è Compile Web Dependencies
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        include:
          - name: üêß Linux
            arch: x86_64
            target: editor
            platform: linux
          - name: üï∏ Web
            arch: wasm32
            target: template_release
            platform: javascript
    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          lfs: true
          submodules: recursive

      - name: Setup EM SDK
        uses: mymindstorm/setup-emsdk@v11
        with:
          version: ${{env.EM_VERSION}}

      - name: Apply javascript build patch
        shell: bash
        run: |
          cd godot-cpp
          git apply --ignore-space-change --ignore-whitespace ../patches/fixed_javascript_build.patch
          cd ..

      - name: Compile GDExtension for ${{matrix.name}}
        uses: ./.github/actions/compile_gdextension
        with:
          platform: ${{matrix.platform}}
          target: ${{matrix.target}}
          arch: ${{matrix.arch}}
          artifact: ${{matrix.name}}

  build:
    name: üåê Build Project
    runs-on: ubuntu-20.04
    container:
      image: barichello/godot-ci:4.1.1
    needs: compile
    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          lfs: true

      - name: Download Binaries
        uses: actions/download-artifact@v3
        with:
          path: extracted_files

      - name: Replace with new files
        run: |
          ls -R extracted_files
          find extracted_files/ -mindepth 2 -type f -exec mv -i '{}' extracted_files/ ';'
          rm -rf ${{env.ADDON_LIBS_PATH}}/
          mv -f extracted_files ${{env.ADDON_LIBS_PATH}}
          ls -R ${{env.ADDON_LIBS_PATH}}

      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable

      - name: üï∏ Web Build
        run: |
          run: godot -v -e --headless --path ${{env.PROJECT_PATH}} --quit || true
          mkdir ${GITHUB_WORKSPACE}/_site
          godot -v --headless --path ${{env.PROJECT_PATH}} --export-release web ${GITHUB_WORKSPACE}/_site/index.html
          cp ${{env.PROJECT_PATH}}/coi-serviceworker.min.js ${GITHUB_WORKSPACE}/_site/coi-serviceworker.min.js

      - name: Fix Permissions
        run: |
          chmod -c -R +rX "_site/" | while read line; do
            echo "::warning title=Invalid file permissions automatically fixed::$line"
          done

      - name: Upload Site Artifact
        uses: actions/upload-pages-artifact@v1
        with:
          name: github-pages

  deploy:
    name: üöÄ Deploy Site
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
