name: ↗️ Update GDExtension Binaries
on:
  workflow_call:
  workflow_dispatch:

jobs:
  compile:
    uses: ./.github/workflows/gdextension_build.yml
    with:
      buildLinux: true
      buildWindows: true
      buildMacos: true
      buildAndroid: true
      buildWeb: true

  update:
    name: Update Extensions
    runs-on: ubuntu-20.04
    permissions:
      contents: write
    needs: compile
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setvars
      - uses: nschloe/action-cached-lfs-checkout@v1

      - name: Download Binaries
        uses: actions/download-artifact@v3
        with:
          path: extracted_files
          name: gdextension_libs

      - name: Replace with new files
        run: |
          mkdir -p ${{env.ADDON_LIBS_PATH}}
          ls -R extracted_files
          declare -a libs=( \
            "libopenkcc.linux.editor.x86_64.so" \
            "libopenkcc.linux.template_release.x86_64.so" \
            "libopenkcc.macos.editor.framework/libopenkcc.macos.editor" \
            "libopenkcc.macos.template_release.framework/libopenkcc.macos.template_release" \
            "libopenkcc.windows.editor.x86_64.dll" \
            "libopenkcc.windows.template_release.x86_64.dll" \
            "libopenkcc.javascript.template_release.wasm32.wasm" \
            "libopenkcc.android.template_release.arm32.so" \
            "libopenkcc.android.template_release.arm64.so" \
            "libopenkcc.android.template_release.x86_32.so" \
            "libopenkcc.android.template_release.x86_64.so" \
          )
          for lib in "${libs[@]}"
          do
            new_lib="extracted_files/${lib}"
            existing_lib="${{env.ADDON_LIBS_PATH}}/${lib}"

            echo "Replacing $existing_lib with $new_lib"
            mkdir -p $(dirname "$existing_lib")
            rm -rf $existing_lib
            mv -f $new_lib $existing_lib
            git add -f $existing_lib
          done

          rm -rf extracted_files

      - name: Commit report
        run: |
          if [[ `git status --untracked-files --porcelain` ]]; then
            git config --global user.name 'github-actions[bot]'
            git config --global user.email 'github-actions[bot]@users.noreply.github.com'
            git diff --cached
            echo "# Changed files:" >> $GITHUB_STEP_SUMMARY
            git diff --cached --name-only >> $GITHUB_STEP_SUMMARY
            git commit -am "[CI] ↗️ Updated Binaries"
            git push
          else
            echo "No changes found"
          fi